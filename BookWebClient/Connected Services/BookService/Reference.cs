//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookWebClient.BookService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookService.IBookService")]
    public interface IBookService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetAllBooks", ReplyAction="http://tempuri.org/IBookService/GetAllBooksResponse")]
        Models.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetAllBooks", ReplyAction="http://tempuri.org/IBookService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<Models.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBookService/saveBook")]
        void saveBook(Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBookService/saveBook")]
        System.Threading.Tasks.Task saveBookAsync(Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/updateBook", ReplyAction="http://tempuri.org/IBookService/updateBookResponse")]
        Models.Result updateBook(Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/updateBook", ReplyAction="http://tempuri.org/IBookService/updateBookResponse")]
        System.Threading.Tasks.Task<Models.Result> updateBookAsync(Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBookService/deleteBook")]
        void deleteBook(Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBookService/deleteBook")]
        System.Threading.Tasks.Task deleteBookAsync(Models.Book book);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookServiceChannel : BookWebClient.BookService.IBookService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookServiceClient : System.ServiceModel.ClientBase<BookWebClient.BookService.IBookService>, BookWebClient.BookService.IBookService {
        
        public BookServiceClient() {
        }
        
        public BookServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Models.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<Models.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public void saveBook(Models.Book book) {
            base.Channel.saveBook(book);
        }
        
        public System.Threading.Tasks.Task saveBookAsync(Models.Book book) {
            return base.Channel.saveBookAsync(book);
        }
        
        public Models.Result updateBook(Models.Book book) {
            return base.Channel.updateBook(book);
        }
        
        public System.Threading.Tasks.Task<Models.Result> updateBookAsync(Models.Book book) {
            return base.Channel.updateBookAsync(book);
        }
        
        public void deleteBook(Models.Book book) {
            base.Channel.deleteBook(book);
        }
        
        public System.Threading.Tasks.Task deleteBookAsync(Models.Book book) {
            return base.Channel.deleteBookAsync(book);
        }
    }
}
